(() => { let e, t, a = 0, s = 0, n = 0, o = !1, c = 0; const r = [{ type: "sticky", heightNum: 5, scrollHeight: 0, objs: { container: document.querySelector("#scroll-section-0"), messageA: document.querySelector("#scroll-section-0 .main-message.a"), messageB: document.querySelector("#scroll-section-0 .main-message.b"), messageC: document.querySelector("#scroll-section-0 .main-message.c"), messageD: document.querySelector("#scroll-section-0 .main-message.d"), canvas: document.querySelector("#video-canvas-0"), context: document.querySelector("#video-canvas-0").getContext("2d"), videoImages: [] }, values: { videoImageCount: 300, imageSequence: [0, 299], canvas_opacity: [1, 0, { start: .9, end: 1 }], messageA_opacity_in: [0, 1, { start: .1, end: .2 }], messageB_opacity_in: [0, 1, { start: .3, end: .4 }], messageC_opacity_in: [0, 1, { start: .5, end: .6 }], messageD_opacity_in: [0, 1, { start: .7, end: .8 }], messageA_translateY_in: [20, 0, { start: .1, end: .2 }], messageB_translateY_in: [20, 0, { start: .3, end: .4 }], messageC_translateY_in: [20, 0, { start: .5, end: .6 }], messageD_translateY_in: [20, 0, { start: .7, end: .8 }], messageA_opacity_out: [1, 0, { start: .25, end: .3 }], messageB_opacity_out: [1, 0, { start: .45, end: .5 }], messageC_opacity_out: [1, 0, { start: .65, end: .7 }], messageD_opacity_out: [1, 0, { start: .85, end: .9 }], messageA_translateY_out: [0, -20, { start: .25, end: .3 }], messageB_translateY_out: [0, -20, { start: .45, end: .5 }], messageC_translateY_out: [0, -20, { start: .65, end: .7 }], messageD_translateY_out: [0, -20, { start: .85, end: .9 }] } }, { type: "normal", scrollHeight: 0, objs: { container: document.querySelector("#scroll-section-1") } }, { type: "sticky", heightNum: 5, scrollHeight: 0, objs: { container: document.querySelector("#scroll-section-2"), messageA: document.querySelector("#scroll-section-2 .a"), messageB: document.querySelector("#scroll-section-2 .b"), messageC: document.querySelector("#scroll-section-2 .c"), pinB: document.querySelector("#scroll-section-2 .b .pin"), pinC: document.querySelector("#scroll-section-2 .c .pin"), canvas: document.querySelector("#video-canvas-1"), context: document.querySelector("#video-canvas-1").getContext("2d"), videoImages: [] }, values: { videoImageCount: 960, imageSequence: [0, 959], canvas_opacity_in: [0, 1, { start: 0, end: .1 }], canvas_opacity_out: [1, 0, { start: .95, end: 1 }], messageA_translateY_in: [20, 0, { start: .15, end: .2 }], messageB_translateY_in: [30, 0, { start: .6, end: .65 }], messageC_translateY_in: [30, 0, { start: .87, end: .92 }], messageA_opacity_in: [0, 1, { start: .25, end: .3 }], messageB_opacity_in: [0, 1, { start: .6, end: .65 }], messageC_opacity_in: [0, 1, { start: .87, end: .92 }], messageA_translateY_out: [0, -20, { start: .4, end: .45 }], messageB_translateY_out: [0, -20, { start: .68, end: .73 }], messageC_translateY_out: [0, -20, { start: .95, end: 1 }], messageA_opacity_out: [1, 0, { start: .4, end: .45 }], messageB_opacity_out: [1, 0, { start: .68, end: .73 }], messageC_opacity_out: [1, 0, { start: .95, end: 1 }], pinB_scaleY: [.5, 1, { start: .6, end: .65 }], pinC_scaleY: [.5, 1, { start: .87, end: .92 }] } }, { type: "sticky", heightNum: 5, scrollHeight: 0, objs: { container: document.querySelector("#scroll-section-3"), canvasCaption: document.querySelector(".canvas-caption"), canvas: document.querySelector(".image-blend-canvas"), context: document.querySelector(".image-blend-canvas").getContext("2d"), imagesPath: ["./images/test.png", "./images/blend-image-2.jpg"], images: [] }, values: { rect1X: [0, 0, { start: 0, end: 0 }], rect2X: [0, 0, { start: 0, end: 0 }], blendHeight: [0, 0, { start: 0, end: 0 }], canvas_scale: [0, 0, { start: 0, end: 0 }], canvasCaption_opacity: [0, 1, { start: 0, end: 0 }], canvasCaption_translateY: [20, 0, { start: 0, end: 0 }], rectStartY: 0 } }], i = (e, t) => { let a; const s = r[n].scrollHeight, o = t / s; if (3 === e.length) { const n = e[2].start * s, o = e[2].end * s, c = o - n; t >= n && t <= o ? a = (t - n) / c * (e[1] - e[0]) + e[0] : t < n ? a = e[0] : t > o && (a = e[1]) } else a = o * (e[1] - e[0]) + e[0]; return a }, l = () => { o = !1, s = 0; for (let e = 0; e < n; e++)s += r[e].scrollHeight; if (c < s + r[n].scrollHeight && document.body.classList.remove("scroll-effect-end"), c > s + r[n].scrollHeight && (o = !0, n === r.length - 1 && document.body.classList.add("scroll-effect-end"), n < r.length - 1 && n++, document.body.setAttribute("id", `show-scene-${n}`)), c < s) { if (o = !0, 0 === n) return; n--, document.body.setAttribute("id", `show-scene-${n}`) } o || (() => { const e = r[n].objs, t = r[n].values, o = a - s, c = r[n].scrollHeight, l = o / c; switch (n) { case 0: e.canvas.style.opacity = i(t.canvas_opacity, o), l <= .22 ? (e.messageA.style.opacity = i(t.messageA_opacity_in, o), e.messageA.style.transform = `translate3d(0, ${i(t.messageA_translateY_in, o)}%)`) : (e.messageA.style.opacity = i(t.messageA_opacity_out, o), e.messageA.style.transform = `translate3d(0, ${i(t.messageA_translateY_out, o)}%)`), l <= .42 ? (e.messageB.style.opacity = i(t.messageB_opacity_in, o), e.messageB.style.transform = `translate3d(0, ${i(t.messageB_translateY_in, o)}%, 0)`) : (e.messageB.style.opacity = i(t.messageB_opacity_out, o), e.messageB.style.transform = `translate3d(0, ${i(t.messageB_translateY_out, o)}%, 0)`), l <= .62 ? (e.messageC.style.opacity = i(t.messageC_opacity_in, o), e.messageC.style.transform = `translate3d(0, ${i(t.messageC_translateY_in, o)}%, 0)`) : (e.messageC.style.opacity = i(t.messageC_opacity_out, o), e.messageC.style.transform = `translate3d(0, ${i(t.messageC_translateY_out, o)}%, 0)`), l <= .82 ? (e.messageD.style.opacity = i(t.messageD_opacity_in, o), e.messageD.style.transform = `translate3d(0, ${i(t.messageD_translateY_in, o)}%, 0)`) : (e.messageD.style.opacity = i(t.messageD_opacity_out, o), e.messageD.style.transform = `translate3d(0, ${i(t.messageD_translateY_out, o)}%, 0)`); break; case 2: if (e.canvas.style.opacity = i(l <= .5 ? t.canvas_opacity_in : t.canvas_opacity_out, o), l <= .32 ? (e.messageA.style.opacity = i(t.messageA_opacity_in, o), e.messageA.style.transform = `translate3d(0, ${i(t.messageA_translateY_in, o)}%, 0)`) : (e.messageA.style.opacity = i(t.messageA_opacity_out, o), e.messageA.style.transform = `translate3d(0, ${i(t.messageA_translateY_out, o)}%, 0)`), l <= .67 ? (e.messageB.style.transform = `translate3d(0, ${i(t.messageB_translateY_in, o)}%, 0)`, e.messageB.style.opacity = i(t.messageB_opacity_in, o), e.pinB.style.transform = `scaleY(${i(t.pinB_scaleY, o)})`) : (e.messageB.style.transform = `translate3d(0, ${i(t.messageB_translateY_out, o)}%, 0)`, e.messageB.style.opacity = i(t.messageB_opacity_out, o), e.pinB.style.transform = `scaleY(${i(t.pinB_scaleY, o)})`), l <= .93 ? (e.messageC.style.transform = `translate3d(0, ${i(t.messageC_translateY_in, o)}%, 0)`, e.messageC.style.opacity = i(t.messageC_opacity_in, o), e.pinC.style.transform = `scaleY(${i(t.pinC_scaleY, o)})`) : (e.messageC.style.transform = `translate3d(0, ${i(t.messageC_translateY_out, o)}%, 0)`, e.messageC.style.opacity = i(t.messageC_opacity_out, o), e.pinC.style.transform = `scaleY(${i(t.pinC_scaleY, o)})`), l > .9) { const e = r[3].objs, t = r[3].values, a = window.innerWidth / e.canvas.width, s = window.innerHeight / e.canvas.height; let n; n = a <= s ? s : a, e.canvas.style.transform = `scale(${n})`, e.context.fillStyle = "white", e.context.drawImage(e.images[0], 0, 0); const o = document.body.offsetWidth / n, c = (window.innerHeight, .15 * o); t.rect1X[0] = (e.canvas.width - o) / 2, t.rect1X[1] = t.rect1X[0] - c, t.rect2X[0] = t.rect1X[0] + o - c, t.rect2X[1] = t.rect2X[0] + c, e.context.fillRect(parseInt(t.rect1X[0]), 0, parseInt(c), e.canvas.height), e.context.fillRect(parseInt(t.rect2X[0]), 0, parseInt(c), e.canvas.height) } break; case 3: let a = 0; const s = window.innerWidth / e.canvas.width, d = window.innerHeight / e.canvas.height; let m; m = s <= d ? d : s, e.canvas.style.transform = `scale(${m})`, e.context.fillStyle = "white", e.context.drawImage(e.images[0], 0, 0); const g = document.body.offsetWidth / m; window.innerHeight, t.rectStartY || (t.rectStartY = e.canvas.offsetTop + (e.canvas.height - e.canvas.height * m) / 2, t.rect1X[2].start = window.innerHeight / 2 / c, t.rect2X[2].start = window.innerHeight / 2 / c, t.rect1X[2].end = t.rectStartY / c, t.rect2X[2].end = t.rectStartY / c); const y = .15 * g; if (t.rect1X[0] = (e.canvas.width - g) / 2, t.rect1X[1] = t.rect1X[0] - y, t.rect2X[0] = t.rect1X[0] + g - y, t.rect2X[1] = t.rect2X[0] + y, e.context.fillRect(parseInt(i(t.rect1X, o)), 0, parseInt(y), e.canvas.height), e.context.fillRect(parseInt(i(t.rect2X, o)), 0, parseInt(y), e.canvas.height), l < t.rect1X[2].end) a = 1, e.canvas.classList.remove("sticky"); else { a = 2, t.blendHeight[0] = 0, t.blendHeight[1] = e.canvas.height, t.blendHeight[2].start = t.rect1X[2].end, t.blendHeight[2].end = t.blendHeight[2].start + .2; const s = i(t.blendHeight, o); e.context.drawImage(e.images[1], 0, e.canvas.height - s, e.canvas.width, s, 0, e.canvas.height - s, e.canvas.width, s), e.canvas.classList.add("sticky"), e.canvas.style.top = `${-(e.canvas.height - e.canvas.height * m) / 2}px`, l > t.blendHeight[2].end && (t.canvas_scale[0] = m, t.canvas_scale[1] = document.body.offsetWidth / (1.5 * e.canvas.width), t.canvas_scale[2].start = t.blendHeight[2].end, t.canvas_scale[2].end = t.canvas_scale[2].start + .2, e.canvas.style.transform = `scale(${i(t.canvas_scale, o)})`, e.canvas.style.marginTop = 0), l > t.canvas_scale[2].end && t.canvas_scale[2].end > 0 ? (e.canvas.classList.remove("sticky"), e.canvas.style.marginTop = `${.4 * c}px`, t.canvasCaption_opacity[2].start = t.canvas_scale[2].end, t.canvasCaption_opacity[2].end = t.canvasCaption_opacity[2].start + .1, t.canvasCaption_translateY[2].start = t.canvasCaption_opacity[2].start, t.canvasCaption_translateY[2].end = t.canvasCaption_opacity[2].end, e.canvasCaption.style.opacity = i(t.canvasCaption_opacity, o), e.canvasCaption.style.transform = `translate3d(0,${i(t.canvasCaption_translateY, o)}%,0)`) : e.canvasCaption.style.opacity = t.canvasCaption_opacity[0] } } })() }, d = () => { if (c += .1 * (a - c), !o && (0 === n || 2 === n)) { const e = c - s, t = r[n].objs, a = r[n].values; let o = Math.round(i(a.imageSequence, e)); t.videoImages[o] && t.context.drawImage(t.videoImages[o], 0, 0) } e = requestAnimationFrame(d), Math.abs(a - c) < 1 && (cancelAnimationFrame(e), t = !1) }; window.addEventListener("load", () => { document.body.classList.remove("before-load"), (() => { for (let e = 0; e < r.length; e++)"sticky" === r[e].type ? r[e].scrollHeight = r[e].heightNum * window.innerHeight : "normal" === r[e].type && (r[e].scrollHeight = r[e].objs.container.offsetHeight), r[e].objs.container.style.height = `${r[e].scrollHeight}px`; a = window.pageYOffset; let e = 0; for (let t = 0; t < r.length; t++)if ((e += r[t].scrollHeight) >= a) { n = t; break } document.body.setAttribute("id", `show-scene-${n}`); const t = window.innerHeight / 1080; r[0].objs.canvas.style.transform = `translate3d(-50%, -50%, 0) scale(${t})`, r[2].objs.canvas.style.transform = `translate3d(-50%, -50%, 0) scale(${t})` })(), r[0].objs.context.drawImage(r[0].objs.videoImages[0], 0, 0); let s = a, o = 0; if (a > 0) { let e = setInterval(() => { window.scrollTo(0, s), s += 5, o > 20 && clearInterval(e), o++ }, 20) } window.addEventListener("scroll", () => { a = window.pageYOffset, l(), a > 44 ? document.body.classList.add("local-nav-sticky") : document.body.classList.remove("local-nav-sticky"), t || (e = requestAnimationFrame(d), t = !0) }), window.addEventListener("resize", () => { window.innerWidth > 900 && window.location.reload() }), window.addEventListener("orientationchange", () => { scrollTo(0, 0), setTimeout(() => { window.location.reload() }, 500) }), document.querySelector(".loading").addEventListener("transitionend", e => { document.body.removeChild(e.currentTarget) }) }), (() => { let e, t, a; for (let t = 0; t < r[0].values.videoImageCount; t++)(e = new Image).src = `./video/001/IMG_${6726 + t}.JPG`, r[0].objs.videoImages.push(e); for (let e = 0; e < r[2].values.videoImageCount; e++)(t = new Image).src = `./video/002/IMG_${7027 + e}.JPG`, r[2].objs.videoImages.push(t); for (let e = 0; e < r[3].objs.imagesPath.length; e++)(a = new Image).src = r[3].objs.imagesPath[e], r[3].objs.images.push(a) })() })();